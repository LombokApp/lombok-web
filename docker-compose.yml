services:
  api:
    container_name: 'stellariscloud-api'
    build:
      context: .
      dockerfile: docker/app.Dockerfile
      target: local
    volumes:
      - ./:/usr/src/app:cached
    env_file: packages/api/.env
    environment:
      WAIT_HOSTS: db:${DB_PORT:-0}
    command: ['bun', '--cwd', 'packages/api', 'dev']
    ports:
      - 3000:3000
    privileged: true
  minio:
    image: minio/minio
    command: server /data --address "minio:9000" --console-address ":9001"
    volumes:
      - ./.docker/minio/:/data
    ports:
      - 9001:${MINIO_CONSOLE_PORT:-9001}
      - 9000:9000
    healthcheck:
      test: ['CMD', 'curl', '-f', 'http://minio:9000/minio/health/live']
      interval: 3s
      timeout: 2s
      retries: 10
    environment:
      - MINIO_DOMAIN=minio:9000
  minioclient:
    image: minio/mc
    depends_on:
      minio:
        condition: service_healthy
    restart: on-failure
    entrypoint: >
      /bin/sh -c "
      /usr/bin/mc alias set myminio http://minio:9000 minioadmin minioadmin;

      /usr/bin/mc rm -r --force myminio/stellaris-dev;
      /usr/bin/mc mb myminio/stellaris-dev;

      /usr/bin/mc admin user add myminio ${DEV_S3_ACCESS_KEY_ID} ${DEV_S3_SECRET_ACCESS_KEY};
      /usr/bin/mc admin policy attach myminio readwrite --user ${DEV_S3_ACCESS_KEY_ID};

      # /usr/bin/mc admin trace -v -a myminio

      exit 0;
      "
  db:
    image: postgres
    ports:
      - 5432:${DB_PORT:-0}
    env_file: packages/api/.env
    environment:
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_DB=${DB_NAME}
    volumes:
      - ./.docker/postgres/:/var/lib/postgresql/data
