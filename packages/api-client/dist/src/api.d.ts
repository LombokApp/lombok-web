/**
 * @stellariscloud/api
 * The Stellaris Cloud core API
 *
 * The version of the OpenAPI document: 1.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import type { Configuration } from './configuration';
import type { AxiosPromise, AxiosInstance, AxiosRequestConfig } from 'axios';
import type { RequestArgs } from './base';
import { BaseAPI } from './base';
/**
 *
 * @export
 * @interface AppListResponse
 */
export interface AppListResponse {
    /**
     *
     * @type {AppListResponseInstalled}
     * @memberof AppListResponse
     */
    'installed': AppListResponseInstalled;
    /**
     *
     * @type {{ [key: string]: Array<AppListResponseConnectedValueInner> | undefined; }}
     * @memberof AppListResponse
     */
    'connected': {
        [key: string]: Array<AppListResponseConnectedValueInner> | undefined;
    };
}
/**
 *
 * @export
 * @interface AppListResponseConnectedValueInner
 */
export interface AppListResponseConnectedValueInner {
    /**
     *
     * @type {string}
     * @memberof AppListResponseConnectedValueInner
     */
    'appIdentifier': string;
    /**
     *
     * @type {string}
     * @memberof AppListResponseConnectedValueInner
     */
    'socketClientId': string;
    /**
     *
     * @type {string}
     * @memberof AppListResponseConnectedValueInner
     */
    'name': string;
    /**
     *
     * @type {string}
     * @memberof AppListResponseConnectedValueInner
     */
    'ip': string;
}
/**
 *
 * @export
 * @interface AppListResponseInstalled
 */
export interface AppListResponseInstalled {
    /**
     *
     * @type {UserListResponseMeta}
     * @memberof AppListResponseInstalled
     */
    'meta': UserListResponseMeta;
    /**
     *
     * @type {Array<AppListResponseInstalledResultInner>}
     * @memberof AppListResponseInstalled
     */
    'result': Array<AppListResponseInstalledResultInner>;
}
/**
 *
 * @export
 * @interface AppListResponseInstalledResultInner
 */
export interface AppListResponseInstalledResultInner {
    /**
     *
     * @type {string}
     * @memberof AppListResponseInstalledResultInner
     */
    'identifier': string;
    /**
     *
     * @type {AppListResponseInstalledResultInnerConfig}
     * @memberof AppListResponseInstalledResultInner
     */
    'config': AppListResponseInstalledResultInnerConfig;
    /**
     *
     * @type {{ [key: string]: AppListResponseInstalledResultInnerUiValue | undefined; }}
     * @memberof AppListResponseInstalledResultInner
     */
    'ui': {
        [key: string]: AppListResponseInstalledResultInnerUiValue | undefined;
    };
}
/**
 *
 * @export
 * @interface AppListResponseInstalledResultInnerConfig
 */
export interface AppListResponseInstalledResultInnerConfig {
    /**
     *
     * @type {string}
     * @memberof AppListResponseInstalledResultInnerConfig
     */
    'publicKey': string;
    /**
     *
     * @type {string}
     * @memberof AppListResponseInstalledResultInnerConfig
     */
    'description': string;
    /**
     *
     * @type {Array<string>}
     * @memberof AppListResponseInstalledResultInnerConfig
     */
    'subscribedEvents': Array<string>;
    /**
     *
     * @type {Array<string>}
     * @memberof AppListResponseInstalledResultInnerConfig
     */
    'emitEvents': Array<string>;
    /**
     *
     * @type {AppListResponseInstalledResultInnerConfigActions}
     * @memberof AppListResponseInstalledResultInnerConfig
     */
    'actions': AppListResponseInstalledResultInnerConfigActions;
    /**
     *
     * @type {Array<AppListResponseInstalledResultInnerConfigMenuItemsInner>}
     * @memberof AppListResponseInstalledResultInnerConfig
     */
    'menuItems': Array<AppListResponseInstalledResultInnerConfigMenuItemsInner>;
}
/**
 *
 * @export
 * @interface AppListResponseInstalledResultInnerConfigActions
 */
export interface AppListResponseInstalledResultInnerConfigActions {
    /**
     *
     * @type {Array<AppListResponseInstalledResultInnerConfigActionsFolderInner>}
     * @memberof AppListResponseInstalledResultInnerConfigActions
     */
    'folder': Array<AppListResponseInstalledResultInnerConfigActionsFolderInner>;
    /**
     *
     * @type {Array<AppListResponseInstalledResultInnerConfigActionsFolderInner>}
     * @memberof AppListResponseInstalledResultInnerConfigActions
     */
    'object': Array<AppListResponseInstalledResultInnerConfigActionsFolderInner>;
}
/**
 *
 * @export
 * @interface AppListResponseInstalledResultInnerConfigActionsFolderInner
 */
export interface AppListResponseInstalledResultInnerConfigActionsFolderInner {
    /**
     *
     * @type {string}
     * @memberof AppListResponseInstalledResultInnerConfigActionsFolderInner
     */
    'key': string;
    /**
     *
     * @type {string}
     * @memberof AppListResponseInstalledResultInnerConfigActionsFolderInner
     */
    'description': string;
}
/**
 *
 * @export
 * @interface AppListResponseInstalledResultInnerConfigMenuItemsInner
 */
export interface AppListResponseInstalledResultInnerConfigMenuItemsInner {
    /**
     *
     * @type {string}
     * @memberof AppListResponseInstalledResultInnerConfigMenuItemsInner
     */
    'label': string;
    /**
     *
     * @type {string}
     * @memberof AppListResponseInstalledResultInnerConfigMenuItemsInner
     */
    'iconPath'?: string;
    /**
     *
     * @type {string}
     * @memberof AppListResponseInstalledResultInnerConfigMenuItemsInner
     */
    'uiName': string;
}
/**
 *
 * @export
 * @interface AppListResponseInstalledResultInnerUiValue
 */
export interface AppListResponseInstalledResultInnerUiValue {
    /**
     *
     * @type {string}
     * @memberof AppListResponseInstalledResultInnerUiValue
     */
    'path': string;
    /**
     *
     * @type {string}
     * @memberof AppListResponseInstalledResultInnerUiValue
     */
    'name': string;
    /**
     *
     * @type {{ [key: string]: AppListResponseInstalledResultInnerUiValueFilesValue | undefined; }}
     * @memberof AppListResponseInstalledResultInnerUiValue
     */
    'files': {
        [key: string]: AppListResponseInstalledResultInnerUiValueFilesValue | undefined;
    };
}
/**
 *
 * @export
 * @interface AppListResponseInstalledResultInnerUiValueFilesValue
 */
export interface AppListResponseInstalledResultInnerUiValueFilesValue {
    /**
     *
     * @type {number}
     * @memberof AppListResponseInstalledResultInnerUiValueFilesValue
     */
    'size': number;
    /**
     *
     * @type {string}
     * @memberof AppListResponseInstalledResultInnerUiValueFilesValue
     */
    'hash': string;
}
/**
 *
 * @export
 * @interface EventDTO
 */
export interface EventDTO {
    /**
     *
     * @type {string}
     * @memberof EventDTO
     */
    'id': string;
    /**
     *
     * @type {string}
     * @memberof EventDTO
     */
    'eventKey': string;
    /**
     *
     * @type {any}
     * @memberof EventDTO
     */
    'appIdentifier': any;
    /**
     *
     * @type {EventDTOLocationContext}
     * @memberof EventDTO
     */
    'locationContext'?: EventDTOLocationContext;
    /**
     *
     * @type {any}
     * @memberof EventDTO
     */
    'data'?: any;
    /**
     *
     * @type {string}
     * @memberof EventDTO
     */
    'createdAt': string;
}
/**
 *
 * @export
 * @interface EventDTOLocationContext
 */
export interface EventDTOLocationContext {
    /**
     *
     * @type {string}
     * @memberof EventDTOLocationContext
     */
    'folderId': string;
    /**
     *
     * @type {string}
     * @memberof EventDTOLocationContext
     */
    'objectKey'?: string;
}
/**
 *
 * @export
 * @interface EventGetResponse
 */
export interface EventGetResponse {
    /**
     *
     * @type {EventGetResponseEvent}
     * @memberof EventGetResponse
     */
    'event': EventGetResponseEvent;
}
/**
 *
 * @export
 * @interface EventGetResponseEvent
 */
export interface EventGetResponseEvent {
    /**
     *
     * @type {string}
     * @memberof EventGetResponseEvent
     */
    'id': string;
    /**
     *
     * @type {string}
     * @memberof EventGetResponseEvent
     */
    'eventKey': string;
    /**
     *
     * @type {any}
     * @memberof EventGetResponseEvent
     */
    'appIdentifier': any;
    /**
     *
     * @type {EventDTOLocationContext}
     * @memberof EventGetResponseEvent
     */
    'locationContext'?: EventDTOLocationContext;
    /**
     *
     * @type {any}
     * @memberof EventGetResponseEvent
     */
    'data'?: any;
    /**
     *
     * @type {string}
     * @memberof EventGetResponseEvent
     */
    'createdAt': string;
}
/**
 *
 * @export
 * @interface EventListResponse
 */
export interface EventListResponse {
    /**
     *
     * @type {UserListResponseMeta}
     * @memberof EventListResponse
     */
    'meta': UserListResponseMeta;
    /**
     *
     * @type {Array<EventGetResponseEvent>}
     * @memberof EventListResponse
     */
    'result': Array<EventGetResponseEvent>;
}
/**
 *
 * @export
 * @interface FolderCreateInputDTO
 */
export interface FolderCreateInputDTO {
    /**
     *
     * @type {string}
     * @memberof FolderCreateInputDTO
     */
    'name': string;
    /**
     *
     * @type {FolderCreateInputDTOMetadataLocation}
     * @memberof FolderCreateInputDTO
     */
    'metadataLocation'?: FolderCreateInputDTOMetadataLocation;
    /**
     *
     * @type {FolderCreateInputDTOMetadataLocation}
     * @memberof FolderCreateInputDTO
     */
    'contentLocation': FolderCreateInputDTOMetadataLocation;
}
/**
 *
 * @export
 * @interface FolderCreateInputDTOMetadataLocation
 */
export interface FolderCreateInputDTOMetadataLocation {
    /**
     *
     * @type {string}
     * @memberof FolderCreateInputDTOMetadataLocation
     */
    'storageProvisionId'?: string;
    /**
     *
     * @type {string}
     * @memberof FolderCreateInputDTOMetadataLocation
     */
    'userLocationId'?: string;
    /**
     *
     * @type {string}
     * @memberof FolderCreateInputDTOMetadataLocation
     */
    'userLocationBucketOverride'?: string;
    /**
     *
     * @type {string}
     * @memberof FolderCreateInputDTOMetadataLocation
     */
    'userLocationPrefixOverride'?: string;
    /**
     *
     * @type {string}
     * @memberof FolderCreateInputDTOMetadataLocation
     */
    'accessKeyId'?: string;
    /**
     *
     * @type {string}
     * @memberof FolderCreateInputDTOMetadataLocation
     */
    'secretAccessKey'?: string;
    /**
     *
     * @type {string}
     * @memberof FolderCreateInputDTOMetadataLocation
     */
    'endpoint'?: string;
    /**
     *
     * @type {string}
     * @memberof FolderCreateInputDTOMetadataLocation
     */
    'bucket'?: string;
    /**
     *
     * @type {string}
     * @memberof FolderCreateInputDTOMetadataLocation
     */
    'region'?: string;
    /**
     *
     * @type {string}
     * @memberof FolderCreateInputDTOMetadataLocation
     */
    'prefix'?: string;
}
/**
 *
 * @export
 * @interface FolderCreateResponse
 */
export interface FolderCreateResponse {
    /**
     *
     * @type {FolderGetResponseFolder}
     * @memberof FolderCreateResponse
     */
    'folder': FolderGetResponseFolder;
}
/**
 *
 * @export
 * @interface FolderCreateSignedUrlInputDTOInner
 */
export interface FolderCreateSignedUrlInputDTOInner {
    /**
     *
     * @type {string}
     * @memberof FolderCreateSignedUrlInputDTOInner
     */
    'objectIdentifier': string;
    /**
     *
     * @type {string}
     * @memberof FolderCreateSignedUrlInputDTOInner
     */
    'method': FolderCreateSignedUrlInputDTOInnerMethodEnum;
}
export declare const FolderCreateSignedUrlInputDTOInnerMethodEnum: {
    readonly Delete: "DELETE";
    readonly Put: "PUT";
    readonly Get: "GET";
};
export type FolderCreateSignedUrlInputDTOInnerMethodEnum = typeof FolderCreateSignedUrlInputDTOInnerMethodEnum[keyof typeof FolderCreateSignedUrlInputDTOInnerMethodEnum];
/**
 *
 * @export
 * @interface FolderCreateSignedUrlsResponse
 */
export interface FolderCreateSignedUrlsResponse {
    /**
     *
     * @type {Array<string>}
     * @memberof FolderCreateSignedUrlsResponse
     */
    'urls': Array<string>;
}
/**
 *
 * @export
 * @interface FolderDTO
 */
export interface FolderDTO {
    /**
     *
     * @type {string}
     * @memberof FolderDTO
     */
    'id': string;
    /**
     *
     * @type {string}
     * @memberof FolderDTO
     */
    'ownerId': string;
    /**
     *
     * @type {string}
     * @memberof FolderDTO
     */
    'name': string;
    /**
     *
     * @type {FolderDTOMetadataLocation}
     * @memberof FolderDTO
     */
    'metadataLocation': FolderDTOMetadataLocation;
    /**
     *
     * @type {FolderDTOMetadataLocation}
     * @memberof FolderDTO
     */
    'contentLocation': FolderDTOMetadataLocation;
}
/**
 *
 * @export
 * @interface FolderDTOMetadataLocation
 */
export interface FolderDTOMetadataLocation {
    /**
     *
     * @type {string}
     * @memberof FolderDTOMetadataLocation
     */
    'id': string;
    /**
     *
     * @type {string}
     * @memberof FolderDTOMetadataLocation
     */
    'userId'?: string;
    /**
     *
     * @type {string}
     * @memberof FolderDTOMetadataLocation
     */
    'providerType': FolderDTOMetadataLocationProviderTypeEnum;
    /**
     *
     * @type {string}
     * @memberof FolderDTOMetadataLocation
     */
    'label': string;
    /**
     *
     * @type {string}
     * @memberof FolderDTOMetadataLocation
     */
    'endpoint': string;
    /**
     *
     * @type {string}
     * @memberof FolderDTOMetadataLocation
     */
    'region': string;
    /**
     *
     * @type {string}
     * @memberof FolderDTOMetadataLocation
     */
    'bucket': string;
    /**
     *
     * @type {string}
     * @memberof FolderDTOMetadataLocation
     */
    'prefix'?: string;
    /**
     *
     * @type {string}
     * @memberof FolderDTOMetadataLocation
     */
    'accessKeyId': string;
}
export declare const FolderDTOMetadataLocationProviderTypeEnum: {
    readonly Server: "SERVER";
    readonly User: "USER";
};
export type FolderDTOMetadataLocationProviderTypeEnum = typeof FolderDTOMetadataLocationProviderTypeEnum[keyof typeof FolderDTOMetadataLocationProviderTypeEnum];
/**
 *
 * @export
 * @interface FolderGetMetadataResponse
 */
export interface FolderGetMetadataResponse {
    /**
     *
     * @type {number}
     * @memberof FolderGetMetadataResponse
     */
    'totalCount': number;
    /**
     *
     * @type {number}
     * @memberof FolderGetMetadataResponse
     */
    'totalSizeBytes': number;
}
/**
 *
 * @export
 * @interface FolderGetResponse
 */
export interface FolderGetResponse {
    /**
     *
     * @type {FolderGetResponseFolder}
     * @memberof FolderGetResponse
     */
    'folder': FolderGetResponseFolder;
    /**
     *
     * @type {Array<string>}
     * @memberof FolderGetResponse
     */
    'permissions': Array<FolderGetResponsePermissionsEnum>;
}
export declare const FolderGetResponsePermissionsEnum: {
    readonly FolderRescan: "FOLDER_RESCAN";
    readonly FolderForget: "FOLDER_FORGET";
    readonly ObjectEdit: "OBJECT_EDIT";
    readonly ObjectManage: "OBJECT_MANAGE";
};
export type FolderGetResponsePermissionsEnum = typeof FolderGetResponsePermissionsEnum[keyof typeof FolderGetResponsePermissionsEnum];
/**
 *
 * @export
 * @interface FolderGetResponseFolder
 */
export interface FolderGetResponseFolder {
    /**
     *
     * @type {string}
     * @memberof FolderGetResponseFolder
     */
    'id': string;
    /**
     *
     * @type {string}
     * @memberof FolderGetResponseFolder
     */
    'ownerId': string;
    /**
     *
     * @type {string}
     * @memberof FolderGetResponseFolder
     */
    'name': string;
    /**
     *
     * @type {FolderDTOMetadataLocation}
     * @memberof FolderGetResponseFolder
     */
    'metadataLocation': FolderDTOMetadataLocation;
    /**
     *
     * @type {FolderDTOMetadataLocation}
     * @memberof FolderGetResponseFolder
     */
    'contentLocation': FolderDTOMetadataLocation;
}
/**
 *
 * @export
 * @interface FolderHandleActionInputDTO
 */
export interface FolderHandleActionInputDTO {
    /**
     *
     * @type {string}
     * @memberof FolderHandleActionInputDTO
     */
    'objectKey'?: string;
    /**
     *
     * @type {any}
     * @memberof FolderHandleActionInputDTO
     */
    'actionParams'?: any;
}
/**
 *
 * @export
 * @interface FolderListResponse
 */
export interface FolderListResponse {
    /**
     *
     * @type {UserListResponseMeta}
     * @memberof FolderListResponse
     */
    'meta': UserListResponseMeta;
    /**
     *
     * @type {Array<FolderListResponseResultInner>}
     * @memberof FolderListResponse
     */
    'result': Array<FolderListResponseResultInner>;
}
/**
 *
 * @export
 * @interface FolderListResponseResultInner
 */
export interface FolderListResponseResultInner {
    /**
     *
     * @type {Array<string>}
     * @memberof FolderListResponseResultInner
     */
    'permissions': Array<FolderListResponseResultInnerPermissionsEnum>;
    /**
     *
     * @type {FolderGetResponseFolder}
     * @memberof FolderListResponseResultInner
     */
    'folder': FolderGetResponseFolder;
}
export declare const FolderListResponseResultInnerPermissionsEnum: {
    readonly FolderRescan: "FOLDER_RESCAN";
    readonly FolderForget: "FOLDER_FORGET";
    readonly ObjectEdit: "OBJECT_EDIT";
    readonly ObjectManage: "OBJECT_MANAGE";
};
export type FolderListResponseResultInnerPermissionsEnum = typeof FolderListResponseResultInnerPermissionsEnum[keyof typeof FolderListResponseResultInnerPermissionsEnum];
/**
 *
 * @export
 * @interface FolderObjectContentAttributesDTO
 */
export interface FolderObjectContentAttributesDTO {
    /**
     *
     * @type {string}
     * @memberof FolderObjectContentAttributesDTO
     */
    'mediaType': FolderObjectContentAttributesDTOMediaTypeEnum;
    /**
     *
     * @type {string}
     * @memberof FolderObjectContentAttributesDTO
     */
    'mimeType': string;
    /**
     *
     * @type {number}
     * @memberof FolderObjectContentAttributesDTO
     */
    'height': number;
    /**
     *
     * @type {number}
     * @memberof FolderObjectContentAttributesDTO
     */
    'width': number;
    /**
     *
     * @type {number}
     * @memberof FolderObjectContentAttributesDTO
     */
    'orientation': number;
    /**
     *
     * @type {number}
     * @memberof FolderObjectContentAttributesDTO
     */
    'lengthMs': number;
    /**
     *
     * @type {number}
     * @memberof FolderObjectContentAttributesDTO
     */
    'bitrate': number;
}
export declare const FolderObjectContentAttributesDTOMediaTypeEnum: {
    readonly Image: "IMAGE";
    readonly Video: "VIDEO";
    readonly Audio: "AUDIO";
    readonly Document: "DOCUMENT";
    readonly Unknown: "UNKNOWN";
};
export type FolderObjectContentAttributesDTOMediaTypeEnum = typeof FolderObjectContentAttributesDTOMediaTypeEnum[keyof typeof FolderObjectContentAttributesDTOMediaTypeEnum];
/**
 *
 * @export
 * @interface FolderObjectDTO
 */
export interface FolderObjectDTO {
    /**
     *
     * @type {string}
     * @memberof FolderObjectDTO
     */
    'id': string;
    /**
     *
     * @type {string}
     * @memberof FolderObjectDTO
     */
    'objectKey': string;
    /**
     *
     * @type {string}
     * @memberof FolderObjectDTO
     */
    'folderId': string;
    /**
     *
     * @type {any}
     * @memberof FolderObjectDTO
     */
    'hash'?: any;
    /**
     *
     * @type {number}
     * @memberof FolderObjectDTO
     */
    'lastModified': number;
    /**
     *
     * @type {string}
     * @memberof FolderObjectDTO
     */
    'eTag': string;
    /**
     *
     * @type {number}
     * @memberof FolderObjectDTO
     */
    'sizeBytes': number;
    /**
     *
     * @type {string}
     * @memberof FolderObjectDTO
     */
    'mimeType': string;
    /**
     *
     * @type {string}
     * @memberof FolderObjectDTO
     */
    'mediaType': FolderObjectDTOMediaTypeEnum;
    /**
     *
     * @type {{ [key: string]: FolderObjectDTOContentAttributesValue | undefined; }}
     * @memberof FolderObjectDTO
     */
    'contentAttributes': {
        [key: string]: FolderObjectDTOContentAttributesValue | undefined;
    };
    /**
     *
     * @type {{ [key: string]: { [key: string]: FolderObjectDTOContentMetadataValueValue | undefined; } | undefined; }}
     * @memberof FolderObjectDTO
     */
    'contentMetadata': {
        [key: string]: {
            [key: string]: FolderObjectDTOContentMetadataValueValue | undefined;
        } | undefined;
    };
}
export declare const FolderObjectDTOMediaTypeEnum: {
    readonly Image: "IMAGE";
    readonly Video: "VIDEO";
    readonly Audio: "AUDIO";
    readonly Document: "DOCUMENT";
    readonly Unknown: "UNKNOWN";
};
export type FolderObjectDTOMediaTypeEnum = typeof FolderObjectDTOMediaTypeEnum[keyof typeof FolderObjectDTOMediaTypeEnum];
/**
 *
 * @export
 * @interface FolderObjectDTOContentAttributesValue
 */
export interface FolderObjectDTOContentAttributesValue {
    /**
     *
     * @type {string}
     * @memberof FolderObjectDTOContentAttributesValue
     */
    'mediaType': FolderObjectDTOContentAttributesValueMediaTypeEnum;
    /**
     *
     * @type {string}
     * @memberof FolderObjectDTOContentAttributesValue
     */
    'mimeType': string;
    /**
     *
     * @type {number}
     * @memberof FolderObjectDTOContentAttributesValue
     */
    'height': number;
    /**
     *
     * @type {number}
     * @memberof FolderObjectDTOContentAttributesValue
     */
    'width': number;
    /**
     *
     * @type {number}
     * @memberof FolderObjectDTOContentAttributesValue
     */
    'orientation': number;
    /**
     *
     * @type {number}
     * @memberof FolderObjectDTOContentAttributesValue
     */
    'lengthMs': number;
    /**
     *
     * @type {number}
     * @memberof FolderObjectDTOContentAttributesValue
     */
    'bitrate': number;
}
export declare const FolderObjectDTOContentAttributesValueMediaTypeEnum: {
    readonly Image: "IMAGE";
    readonly Video: "VIDEO";
    readonly Audio: "AUDIO";
    readonly Document: "DOCUMENT";
    readonly Unknown: "UNKNOWN";
};
export type FolderObjectDTOContentAttributesValueMediaTypeEnum = typeof FolderObjectDTOContentAttributesValueMediaTypeEnum[keyof typeof FolderObjectDTOContentAttributesValueMediaTypeEnum];
/**
 *
 * @export
 * @interface FolderObjectDTOContentMetadataValueValue
 */
export interface FolderObjectDTOContentMetadataValueValue {
    /**
     *
     * @type {string}
     * @memberof FolderObjectDTOContentMetadataValueValue
     */
    'mimeType': string;
    /**
     *
     * @type {number}
     * @memberof FolderObjectDTOContentMetadataValueValue
     */
    'size': number;
    /**
     *
     * @type {string}
     * @memberof FolderObjectDTOContentMetadataValueValue
     */
    'hash': string;
}
/**
 *
 * @export
 * @interface FolderObjectGetResponse
 */
export interface FolderObjectGetResponse {
    /**
     *
     * @type {FolderObjectListResponseResultInner}
     * @memberof FolderObjectGetResponse
     */
    'folderObject': FolderObjectListResponseResultInner;
}
/**
 *
 * @export
 * @interface FolderObjectListResponse
 */
export interface FolderObjectListResponse {
    /**
     *
     * @type {UserListResponseMeta}
     * @memberof FolderObjectListResponse
     */
    'meta': UserListResponseMeta;
    /**
     *
     * @type {Array<FolderObjectListResponseResultInner>}
     * @memberof FolderObjectListResponse
     */
    'result': Array<FolderObjectListResponseResultInner>;
}
/**
 *
 * @export
 * @interface FolderObjectListResponseResultInner
 */
export interface FolderObjectListResponseResultInner {
    /**
     *
     * @type {string}
     * @memberof FolderObjectListResponseResultInner
     */
    'id': string;
    /**
     *
     * @type {string}
     * @memberof FolderObjectListResponseResultInner
     */
    'objectKey': string;
    /**
     *
     * @type {string}
     * @memberof FolderObjectListResponseResultInner
     */
    'folderId': string;
    /**
     *
     * @type {any}
     * @memberof FolderObjectListResponseResultInner
     */
    'hash'?: any;
    /**
     *
     * @type {number}
     * @memberof FolderObjectListResponseResultInner
     */
    'lastModified': number;
    /**
     *
     * @type {string}
     * @memberof FolderObjectListResponseResultInner
     */
    'eTag': string;
    /**
     *
     * @type {number}
     * @memberof FolderObjectListResponseResultInner
     */
    'sizeBytes': number;
    /**
     *
     * @type {string}
     * @memberof FolderObjectListResponseResultInner
     */
    'mimeType': string;
    /**
     *
     * @type {string}
     * @memberof FolderObjectListResponseResultInner
     */
    'mediaType': FolderObjectListResponseResultInnerMediaTypeEnum;
    /**
     *
     * @type {{ [key: string]: FolderObjectDTOContentAttributesValue | undefined; }}
     * @memberof FolderObjectListResponseResultInner
     */
    'contentAttributes': {
        [key: string]: FolderObjectDTOContentAttributesValue | undefined;
    };
    /**
     *
     * @type {{ [key: string]: { [key: string]: FolderObjectDTOContentMetadataValueValue | undefined; } | undefined; }}
     * @memberof FolderObjectListResponseResultInner
     */
    'contentMetadata': {
        [key: string]: {
            [key: string]: FolderObjectDTOContentMetadataValueValue | undefined;
        } | undefined;
    };
}
export declare const FolderObjectListResponseResultInnerMediaTypeEnum: {
    readonly Image: "IMAGE";
    readonly Video: "VIDEO";
    readonly Audio: "AUDIO";
    readonly Document: "DOCUMENT";
    readonly Unknown: "UNKNOWN";
};
export type FolderObjectListResponseResultInnerMediaTypeEnum = typeof FolderObjectListResponseResultInnerMediaTypeEnum[keyof typeof FolderObjectListResponseResultInnerMediaTypeEnum];
/**
 *
 * @export
 * @interface LoginCredentialsDTO
 */
export interface LoginCredentialsDTO {
    /**
     *
     * @type {string}
     * @memberof LoginCredentialsDTO
     */
    'login': string;
    /**
     *
     * @type {string}
     * @memberof LoginCredentialsDTO
     */
    'password': string;
}
/**
 *
 * @export
 * @interface LoginResponse
 */
export interface LoginResponse {
    /**
     *
     * @type {LoginResponseSession}
     * @memberof LoginResponse
     */
    'session': LoginResponseSession;
}
/**
 *
 * @export
 * @interface LoginResponseSession
 */
export interface LoginResponseSession {
    /**
     *
     * @type {string}
     * @memberof LoginResponseSession
     */
    'accessToken': string;
    /**
     *
     * @type {string}
     * @memberof LoginResponseSession
     */
    'refreshToken': string;
}
/**
 *
 * @export
 * @interface SetSettingInputDTO
 */
export interface SetSettingInputDTO {
    /**
     *
     * @type {any}
     * @memberof SetSettingInputDTO
     */
    'value'?: any;
}
/**
 *
 * @export
 * @interface SettingSetResponse
 */
export interface SettingSetResponse {
    /**
     *
     * @type {string}
     * @memberof SettingSetResponse
     */
    'settingKey': string;
    /**
     *
     * @type {any}
     * @memberof SettingSetResponse
     */
    'settingValue'?: any;
}
/**
 *
 * @export
 * @interface SettingsGetResponse
 */
export interface SettingsGetResponse {
    /**
     *
     * @type {SettingsGetResponseSettings}
     * @memberof SettingsGetResponse
     */
    'settings': SettingsGetResponseSettings;
}
/**
 *
 * @export
 * @interface SettingsGetResponseSettings
 */
export interface SettingsGetResponseSettings {
    /**
     *
     * @type {boolean}
     * @memberof SettingsGetResponseSettings
     */
    'SIGNUP_ENABLED'?: boolean;
    /**
     *
     * @type {Array<string>}
     * @memberof SettingsGetResponseSettings
     */
    'SIGNUP_PERMISSIONS'?: Array<string>;
    /**
     *
     * @type {string}
     * @memberof SettingsGetResponseSettings
     */
    'SERVER_HOSTNAME'?: string;
}
/**
 *
 * @export
 * @interface SignupCredentialsDTO
 */
export interface SignupCredentialsDTO {
    /**
     *
     * @type {string}
     * @memberof SignupCredentialsDTO
     */
    'username': string;
    /**
     *
     * @type {string}
     * @memberof SignupCredentialsDTO
     */
    'email'?: string;
    /**
     *
     * @type {string}
     * @memberof SignupCredentialsDTO
     */
    'password': string;
}
/**
 *
 * @export
 * @interface SignupResponse
 */
export interface SignupResponse {
    /**
     *
     * @type {SignupResponseUser}
     * @memberof SignupResponse
     */
    'user': SignupResponseUser;
}
/**
 *
 * @export
 * @interface SignupResponseUser
 */
export interface SignupResponseUser {
    /**
     *
     * @type {string}
     * @memberof SignupResponseUser
     */
    'id': string;
    /**
     *
     * @type {any}
     * @memberof SignupResponseUser
     */
    'name'?: any;
    /**
     *
     * @type {any}
     * @memberof SignupResponseUser
     */
    'email'?: any;
    /**
     *
     * @type {boolean}
     * @memberof SignupResponseUser
     */
    'emailVerified': boolean;
    /**
     *
     * @type {boolean}
     * @memberof SignupResponseUser
     */
    'isAdmin': boolean;
    /**
     *
     * @type {string}
     * @memberof SignupResponseUser
     */
    'username': string;
    /**
     *
     * @type {Array<string>}
     * @memberof SignupResponseUser
     */
    'permissions': Array<string>;
    /**
     *
     * @type {string}
     * @memberof SignupResponseUser
     */
    'createdAt': string;
    /**
     *
     * @type {string}
     * @memberof SignupResponseUser
     */
    'updatedAt': string;
}
/**
 *
 * @export
 * @interface StorageProvisionDTO
 */
export interface StorageProvisionDTO {
    /**
     *
     * @type {string}
     * @memberof StorageProvisionDTO
     */
    'id': string;
    /**
     *
     * @type {string}
     * @memberof StorageProvisionDTO
     */
    'endpoint': string;
    /**
     *
     * @type {string}
     * @memberof StorageProvisionDTO
     */
    'bucket': string;
    /**
     *
     * @type {string}
     * @memberof StorageProvisionDTO
     */
    'region': string;
    /**
     *
     * @type {string}
     * @memberof StorageProvisionDTO
     */
    'accessKeyId': string;
    /**
     *
     * @type {string}
     * @memberof StorageProvisionDTO
     */
    'prefix'?: string;
    /**
     *
     * @type {Array<string>}
     * @memberof StorageProvisionDTO
     */
    'provisionTypes': Array<StorageProvisionDTOProvisionTypesEnum>;
    /**
     *
     * @type {string}
     * @memberof StorageProvisionDTO
     */
    'label': string;
    /**
     *
     * @type {string}
     * @memberof StorageProvisionDTO
     */
    'description': string;
}
export declare const StorageProvisionDTOProvisionTypesEnum: {
    readonly Content: "CONTENT";
    readonly Metadata: "METADATA";
    readonly Backup: "BACKUP";
};
export type StorageProvisionDTOProvisionTypesEnum = typeof StorageProvisionDTOProvisionTypesEnum[keyof typeof StorageProvisionDTOProvisionTypesEnum];
/**
 *
 * @export
 * @interface StorageProvisionInputDTO
 */
export interface StorageProvisionInputDTO {
    /**
     *
     * @type {string}
     * @memberof StorageProvisionInputDTO
     */
    'label': string;
    /**
     *
     * @type {string}
     * @memberof StorageProvisionInputDTO
     */
    'description': string;
    /**
     *
     * @type {string}
     * @memberof StorageProvisionInputDTO
     */
    'endpoint': string;
    /**
     *
     * @type {string}
     * @memberof StorageProvisionInputDTO
     */
    'bucket': string;
    /**
     *
     * @type {string}
     * @memberof StorageProvisionInputDTO
     */
    'region': string;
    /**
     *
     * @type {string}
     * @memberof StorageProvisionInputDTO
     */
    'accessKeyId': string;
    /**
     *
     * @type {string}
     * @memberof StorageProvisionInputDTO
     */
    'secretAccessKey': string;
    /**
     *
     * @type {string}
     * @memberof StorageProvisionInputDTO
     */
    'prefix'?: string;
    /**
     *
     * @type {Array<string>}
     * @memberof StorageProvisionInputDTO
     */
    'provisionTypes': Array<StorageProvisionInputDTOProvisionTypesEnum>;
}
export declare const StorageProvisionInputDTOProvisionTypesEnum: {
    readonly Content: "CONTENT";
    readonly Metadata: "METADATA";
    readonly Backup: "BACKUP";
};
export type StorageProvisionInputDTOProvisionTypesEnum = typeof StorageProvisionInputDTOProvisionTypesEnum[keyof typeof StorageProvisionInputDTOProvisionTypesEnum];
/**
 *
 * @export
 * @interface StorageProvisionListResponse
 */
export interface StorageProvisionListResponse {
    /**
     *
     * @type {Array<StorageProvisionListResponseResultInner>}
     * @memberof StorageProvisionListResponse
     */
    'result': Array<StorageProvisionListResponseResultInner>;
}
/**
 *
 * @export
 * @interface StorageProvisionListResponseResultInner
 */
export interface StorageProvisionListResponseResultInner {
    /**
     *
     * @type {string}
     * @memberof StorageProvisionListResponseResultInner
     */
    'id': string;
    /**
     *
     * @type {string}
     * @memberof StorageProvisionListResponseResultInner
     */
    'label': string;
    /**
     *
     * @type {string}
     * @memberof StorageProvisionListResponseResultInner
     */
    'description': string;
    /**
     *
     * @type {string}
     * @memberof StorageProvisionListResponseResultInner
     */
    'endpoint': string;
    /**
     *
     * @type {string}
     * @memberof StorageProvisionListResponseResultInner
     */
    'bucket': string;
    /**
     *
     * @type {string}
     * @memberof StorageProvisionListResponseResultInner
     */
    'region': string;
    /**
     *
     * @type {string}
     * @memberof StorageProvisionListResponseResultInner
     */
    'accessKeyId': string;
    /**
     *
     * @type {string}
     * @memberof StorageProvisionListResponseResultInner
     */
    'prefix'?: string;
    /**
     *
     * @type {Array<string>}
     * @memberof StorageProvisionListResponseResultInner
     */
    'provisionTypes': Array<StorageProvisionListResponseResultInnerProvisionTypesEnum>;
}
export declare const StorageProvisionListResponseResultInnerProvisionTypesEnum: {
    readonly Content: "CONTENT";
    readonly Metadata: "METADATA";
    readonly Backup: "BACKUP";
};
export type StorageProvisionListResponseResultInnerProvisionTypesEnum = typeof StorageProvisionListResponseResultInnerProvisionTypesEnum[keyof typeof StorageProvisionListResponseResultInnerProvisionTypesEnum];
/**
 *
 * @export
 * @interface TokenRefreshResponse
 */
export interface TokenRefreshResponse {
    /**
     *
     * @type {LoginResponseSession}
     * @memberof TokenRefreshResponse
     */
    'session': LoginResponseSession;
}
/**
 *
 * @export
 * @interface UpdateViewerInputDTO
 */
export interface UpdateViewerInputDTO {
    /**
     *
     * @type {string}
     * @memberof UpdateViewerInputDTO
     */
    'name': string;
}
/**
 *
 * @export
 * @interface UserCreateInputDTO
 */
export interface UserCreateInputDTO {
    /**
     *
     * @type {any}
     * @memberof UserCreateInputDTO
     */
    'name'?: any;
    /**
     *
     * @type {any}
     * @memberof UserCreateInputDTO
     */
    'email'?: any;
    /**
     *
     * @type {boolean}
     * @memberof UserCreateInputDTO
     */
    'emailVerified'?: boolean;
    /**
     *
     * @type {boolean}
     * @memberof UserCreateInputDTO
     */
    'isAdmin'?: boolean;
    /**
     *
     * @type {string}
     * @memberof UserCreateInputDTO
     */
    'username': string;
    /**
     *
     * @type {string}
     * @memberof UserCreateInputDTO
     */
    'password': string;
    /**
     *
     * @type {Array<string>}
     * @memberof UserCreateInputDTO
     */
    'permissions'?: Array<string>;
}
/**
 *
 * @export
 * @interface UserDTO
 */
export interface UserDTO {
    /**
     *
     * @type {string}
     * @memberof UserDTO
     */
    'id': string;
    /**
     *
     * @type {any}
     * @memberof UserDTO
     */
    'name'?: any;
    /**
     *
     * @type {any}
     * @memberof UserDTO
     */
    'email'?: any;
    /**
     *
     * @type {boolean}
     * @memberof UserDTO
     */
    'emailVerified': boolean;
    /**
     *
     * @type {boolean}
     * @memberof UserDTO
     */
    'isAdmin': boolean;
    /**
     *
     * @type {string}
     * @memberof UserDTO
     */
    'username': string;
    /**
     *
     * @type {Array<string>}
     * @memberof UserDTO
     */
    'permissions': Array<string>;
    /**
     *
     * @type {string}
     * @memberof UserDTO
     */
    'createdAt': string;
    /**
     *
     * @type {string}
     * @memberof UserDTO
     */
    'updatedAt': string;
}
/**
 *
 * @export
 * @interface UserGetResponse
 */
export interface UserGetResponse {
    /**
     *
     * @type {SignupResponseUser}
     * @memberof UserGetResponse
     */
    'user': SignupResponseUser;
}
/**
 *
 * @export
 * @interface UserListResponse
 */
export interface UserListResponse {
    /**
     *
     * @type {UserListResponseMeta}
     * @memberof UserListResponse
     */
    'meta': UserListResponseMeta;
    /**
     *
     * @type {Array<SignupResponseUser>}
     * @memberof UserListResponse
     */
    'result': Array<SignupResponseUser>;
}
/**
 *
 * @export
 * @interface UserListResponseMeta
 */
export interface UserListResponseMeta {
    /**
     *
     * @type {number}
     * @memberof UserListResponseMeta
     */
    'totalCount': number;
}
/**
 *
 * @export
 * @interface UserUpdateInputDTO
 */
export interface UserUpdateInputDTO {
    /**
     *
     * @type {any}
     * @memberof UserUpdateInputDTO
     */
    'name'?: any;
    /**
     *
     * @type {any}
     * @memberof UserUpdateInputDTO
     */
    'email'?: any;
    /**
     *
     * @type {boolean}
     * @memberof UserUpdateInputDTO
     */
    'emailVerified'?: boolean;
    /**
     *
     * @type {boolean}
     * @memberof UserUpdateInputDTO
     */
    'isAdmin'?: boolean;
    /**
     *
     * @type {string}
     * @memberof UserUpdateInputDTO
     */
    'username'?: string;
    /**
     *
     * @type {string}
     * @memberof UserUpdateInputDTO
     */
    'password'?: string;
    /**
     *
     * @type {Array<string>}
     * @memberof UserUpdateInputDTO
     */
    'permissions'?: Array<string>;
}
/**
 *
 * @export
 * @interface ViewerGetResponse
 */
export interface ViewerGetResponse {
    /**
     *
     * @type {SignupResponseUser}
     * @memberof ViewerGetResponse
     */
    'user': SignupResponseUser;
}
/**
 * AppsApi - axios parameter creator
 * @export
 */
export declare const AppsApiAxiosParamCreator: (configuration?: Configuration) => {
    /**
     *
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    listApps: (options?: AxiosRequestConfig) => Promise<RequestArgs>;
};
/**
 * AppsApi - functional programming interface
 * @export
 */
export declare const AppsApiFp: (configuration?: Configuration) => {
    /**
     *
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    listApps(options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<AppListResponse>>;
};
/**
 * AppsApi - factory interface
 * @export
 */
export declare const AppsApiFactory: (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) => {
    /**
     *
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    listApps(options?: AxiosRequestConfig): AxiosPromise<AppListResponse>;
};
/**
 * AppsApi - object-oriented interface
 * @export
 * @class AppsApi
 * @extends {BaseAPI}
 */
export declare class AppsApi extends BaseAPI {
    /**
     *
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof AppsApi
     */
    listApps(options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<AppListResponse, any>>;
}
/**
 * AuthApi - axios parameter creator
 * @export
 */
export declare const AuthApiAxiosParamCreator: (configuration?: Configuration) => {
    /**
     *
     * @param {LoginCredentialsDTO} loginCredentialsDTO
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    login: (loginCredentialsDTO: LoginCredentialsDTO, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    logout: (options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @param {string} refeshToken
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    refreshToken: (refeshToken: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @param {SignupCredentialsDTO} signupCredentialsDTO
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    signup: (signupCredentialsDTO: SignupCredentialsDTO, options?: AxiosRequestConfig) => Promise<RequestArgs>;
};
/**
 * AuthApi - functional programming interface
 * @export
 */
export declare const AuthApiFp: (configuration?: Configuration) => {
    /**
     *
     * @param {LoginCredentialsDTO} loginCredentialsDTO
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    login(loginCredentialsDTO: LoginCredentialsDTO, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<LoginResponse>>;
    /**
     *
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    logout(options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<boolean>>;
    /**
     *
     * @param {string} refeshToken
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    refreshToken(refeshToken: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<TokenRefreshResponse>>;
    /**
     *
     * @param {SignupCredentialsDTO} signupCredentialsDTO
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    signup(signupCredentialsDTO: SignupCredentialsDTO, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<SignupResponse>>;
};
/**
 * AuthApi - factory interface
 * @export
 */
export declare const AuthApiFactory: (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) => {
    /**
     *
     * @param {AuthApiLoginRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    login(requestParameters: AuthApiLoginRequest, options?: AxiosRequestConfig): AxiosPromise<LoginResponse>;
    /**
     *
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    logout(options?: AxiosRequestConfig): AxiosPromise<boolean>;
    /**
     *
     * @param {AuthApiRefreshTokenRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    refreshToken(requestParameters: AuthApiRefreshTokenRequest, options?: AxiosRequestConfig): AxiosPromise<TokenRefreshResponse>;
    /**
     *
     * @param {AuthApiSignupRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    signup(requestParameters: AuthApiSignupRequest, options?: AxiosRequestConfig): AxiosPromise<SignupResponse>;
};
/**
 * Request parameters for login operation in AuthApi.
 * @export
 * @interface AuthApiLoginRequest
 */
export interface AuthApiLoginRequest {
    /**
     *
     * @type {LoginCredentialsDTO}
     * @memberof AuthApiLogin
     */
    readonly loginCredentialsDTO: LoginCredentialsDTO;
}
/**
 * Request parameters for refreshToken operation in AuthApi.
 * @export
 * @interface AuthApiRefreshTokenRequest
 */
export interface AuthApiRefreshTokenRequest {
    /**
     *
     * @type {string}
     * @memberof AuthApiRefreshToken
     */
    readonly refeshToken: string;
}
/**
 * Request parameters for signup operation in AuthApi.
 * @export
 * @interface AuthApiSignupRequest
 */
export interface AuthApiSignupRequest {
    /**
     *
     * @type {SignupCredentialsDTO}
     * @memberof AuthApiSignup
     */
    readonly signupCredentialsDTO: SignupCredentialsDTO;
}
/**
 * AuthApi - object-oriented interface
 * @export
 * @class AuthApi
 * @extends {BaseAPI}
 */
export declare class AuthApi extends BaseAPI {
    /**
     *
     * @param {AuthApiLoginRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof AuthApi
     */
    login(requestParameters: AuthApiLoginRequest, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<LoginResponse, any>>;
    /**
     *
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof AuthApi
     */
    logout(options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<boolean, any>>;
    /**
     *
     * @param {AuthApiRefreshTokenRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof AuthApi
     */
    refreshToken(requestParameters: AuthApiRefreshTokenRequest, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<TokenRefreshResponse, any>>;
    /**
     *
     * @param {AuthApiSignupRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof AuthApi
     */
    signup(requestParameters: AuthApiSignupRequest, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<SignupResponse, any>>;
}
/**
 * EventsApi - axios parameter creator
 * @export
 */
export declare const EventsApiAxiosParamCreator: (configuration?: Configuration) => {
    /**
     *
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getEvent: (options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @param {number} [offset]
     * @param {number} [limit]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    listEvents: (offset?: number, limit?: number, options?: AxiosRequestConfig) => Promise<RequestArgs>;
};
/**
 * EventsApi - functional programming interface
 * @export
 */
export declare const EventsApiFp: (configuration?: Configuration) => {
    /**
     *
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getEvent(options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<EventGetResponse>>;
    /**
     *
     * @param {number} [offset]
     * @param {number} [limit]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    listEvents(offset?: number, limit?: number, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<EventListResponse>>;
};
/**
 * EventsApi - factory interface
 * @export
 */
export declare const EventsApiFactory: (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) => {
    /**
     *
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getEvent(options?: AxiosRequestConfig): AxiosPromise<EventGetResponse>;
    /**
     *
     * @param {EventsApiListEventsRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    listEvents(requestParameters?: EventsApiListEventsRequest, options?: AxiosRequestConfig): AxiosPromise<EventListResponse>;
};
/**
 * Request parameters for listEvents operation in EventsApi.
 * @export
 * @interface EventsApiListEventsRequest
 */
export interface EventsApiListEventsRequest {
    /**
     *
     * @type {number}
     * @memberof EventsApiListEvents
     */
    readonly offset?: number;
    /**
     *
     * @type {number}
     * @memberof EventsApiListEvents
     */
    readonly limit?: number;
}
/**
 * EventsApi - object-oriented interface
 * @export
 * @class EventsApi
 * @extends {BaseAPI}
 */
export declare class EventsApi extends BaseAPI {
    /**
     *
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof EventsApi
     */
    getEvent(options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<EventGetResponse, any>>;
    /**
     *
     * @param {EventsApiListEventsRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof EventsApi
     */
    listEvents(requestParameters?: EventsApiListEventsRequest, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<EventListResponse, any>>;
}
/**
 * FoldersApi - axios parameter creator
 * @export
 */
export declare const FoldersApiAxiosParamCreator: (configuration?: Configuration) => {
    /**
     *
     * @param {FolderCreateInputDTO} folderCreateInputDTO
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    createFolder: (folderCreateInputDTO: FolderCreateInputDTO, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @param {string} folderId
     * @param {Array<FolderCreateSignedUrlInputDTOInner>} folderCreateSignedUrlInputDTOInner
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    createPresignedUrls: (folderId: string, folderCreateSignedUrlInputDTOInner: Array<FolderCreateSignedUrlInputDTOInner>, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @param {string} folderId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    deleteFolder: (folderId: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @param {string} folderId
     * @param {string} objectKey
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    deleteFolderObject: (folderId: string, objectKey: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @param {string} folderId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getFolder: (folderId: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @param {string} folderId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getFolderMetadata: (folderId: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @param {string} folderId
     * @param {string} objectKey
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getFolderObject: (folderId: string, objectKey: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @param {string} folderId
     * @param {string} appIdentifier
     * @param {string} actionKey
     * @param {FolderHandleActionInputDTO} folderHandleActionInputDTO
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    handleFolderAction: (folderId: string, appIdentifier: string, actionKey: string, folderHandleActionInputDTO: FolderHandleActionInputDTO, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @param {string} folderId
     * @param {number} [offset]
     * @param {number} [limit]
     * @param {string} [search]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    listFolderObjects: (folderId: string, offset?: number, limit?: number, search?: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @param {number} [offset]
     * @param {number} [limit]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    listFolders: (offset?: number, limit?: number, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @param {string} folderId
     * @param {string} objectKey
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    refreshFolderObjectS3Metadata: (folderId: string, objectKey: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @param {string} folderId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    rescanFolder: (folderId: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
};
/**
 * FoldersApi - functional programming interface
 * @export
 */
export declare const FoldersApiFp: (configuration?: Configuration) => {
    /**
     *
     * @param {FolderCreateInputDTO} folderCreateInputDTO
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    createFolder(folderCreateInputDTO: FolderCreateInputDTO, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<FolderCreateResponse>>;
    /**
     *
     * @param {string} folderId
     * @param {Array<FolderCreateSignedUrlInputDTOInner>} folderCreateSignedUrlInputDTOInner
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    createPresignedUrls(folderId: string, folderCreateSignedUrlInputDTOInner: Array<FolderCreateSignedUrlInputDTOInner>, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<FolderCreateSignedUrlsResponse>>;
    /**
     *
     * @param {string} folderId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    deleteFolder(folderId: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<void>>;
    /**
     *
     * @param {string} folderId
     * @param {string} objectKey
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    deleteFolderObject(folderId: string, objectKey: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<void>>;
    /**
     *
     * @param {string} folderId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getFolder(folderId: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<FolderGetResponse>>;
    /**
     *
     * @param {string} folderId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getFolderMetadata(folderId: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<FolderGetMetadataResponse>>;
    /**
     *
     * @param {string} folderId
     * @param {string} objectKey
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getFolderObject(folderId: string, objectKey: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<FolderObjectGetResponse>>;
    /**
     *
     * @param {string} folderId
     * @param {string} appIdentifier
     * @param {string} actionKey
     * @param {FolderHandleActionInputDTO} folderHandleActionInputDTO
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    handleFolderAction(folderId: string, appIdentifier: string, actionKey: string, folderHandleActionInputDTO: FolderHandleActionInputDTO, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<void>>;
    /**
     *
     * @param {string} folderId
     * @param {number} [offset]
     * @param {number} [limit]
     * @param {string} [search]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    listFolderObjects(folderId: string, offset?: number, limit?: number, search?: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<FolderObjectListResponse>>;
    /**
     *
     * @param {number} [offset]
     * @param {number} [limit]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    listFolders(offset?: number, limit?: number, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<FolderListResponse>>;
    /**
     *
     * @param {string} folderId
     * @param {string} objectKey
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    refreshFolderObjectS3Metadata(folderId: string, objectKey: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<FolderObjectGetResponse>>;
    /**
     *
     * @param {string} folderId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    rescanFolder(folderId: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<void>>;
};
/**
 * FoldersApi - factory interface
 * @export
 */
export declare const FoldersApiFactory: (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) => {
    /**
     *
     * @param {FoldersApiCreateFolderRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    createFolder(requestParameters: FoldersApiCreateFolderRequest, options?: AxiosRequestConfig): AxiosPromise<FolderCreateResponse>;
    /**
     *
     * @param {FoldersApiCreatePresignedUrlsRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    createPresignedUrls(requestParameters: FoldersApiCreatePresignedUrlsRequest, options?: AxiosRequestConfig): AxiosPromise<FolderCreateSignedUrlsResponse>;
    /**
     *
     * @param {FoldersApiDeleteFolderRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    deleteFolder(requestParameters: FoldersApiDeleteFolderRequest, options?: AxiosRequestConfig): AxiosPromise<void>;
    /**
     *
     * @param {FoldersApiDeleteFolderObjectRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    deleteFolderObject(requestParameters: FoldersApiDeleteFolderObjectRequest, options?: AxiosRequestConfig): AxiosPromise<void>;
    /**
     *
     * @param {FoldersApiGetFolderRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getFolder(requestParameters: FoldersApiGetFolderRequest, options?: AxiosRequestConfig): AxiosPromise<FolderGetResponse>;
    /**
     *
     * @param {FoldersApiGetFolderMetadataRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getFolderMetadata(requestParameters: FoldersApiGetFolderMetadataRequest, options?: AxiosRequestConfig): AxiosPromise<FolderGetMetadataResponse>;
    /**
     *
     * @param {FoldersApiGetFolderObjectRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getFolderObject(requestParameters: FoldersApiGetFolderObjectRequest, options?: AxiosRequestConfig): AxiosPromise<FolderObjectGetResponse>;
    /**
     *
     * @param {FoldersApiHandleFolderActionRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    handleFolderAction(requestParameters: FoldersApiHandleFolderActionRequest, options?: AxiosRequestConfig): AxiosPromise<void>;
    /**
     *
     * @param {FoldersApiListFolderObjectsRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    listFolderObjects(requestParameters: FoldersApiListFolderObjectsRequest, options?: AxiosRequestConfig): AxiosPromise<FolderObjectListResponse>;
    /**
     *
     * @param {FoldersApiListFoldersRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    listFolders(requestParameters?: FoldersApiListFoldersRequest, options?: AxiosRequestConfig): AxiosPromise<FolderListResponse>;
    /**
     *
     * @param {FoldersApiRefreshFolderObjectS3MetadataRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    refreshFolderObjectS3Metadata(requestParameters: FoldersApiRefreshFolderObjectS3MetadataRequest, options?: AxiosRequestConfig): AxiosPromise<FolderObjectGetResponse>;
    /**
     *
     * @param {FoldersApiRescanFolderRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    rescanFolder(requestParameters: FoldersApiRescanFolderRequest, options?: AxiosRequestConfig): AxiosPromise<void>;
};
/**
 * Request parameters for createFolder operation in FoldersApi.
 * @export
 * @interface FoldersApiCreateFolderRequest
 */
export interface FoldersApiCreateFolderRequest {
    /**
     *
     * @type {FolderCreateInputDTO}
     * @memberof FoldersApiCreateFolder
     */
    readonly folderCreateInputDTO: FolderCreateInputDTO;
}
/**
 * Request parameters for createPresignedUrls operation in FoldersApi.
 * @export
 * @interface FoldersApiCreatePresignedUrlsRequest
 */
export interface FoldersApiCreatePresignedUrlsRequest {
    /**
     *
     * @type {string}
     * @memberof FoldersApiCreatePresignedUrls
     */
    readonly folderId: string;
    /**
     *
     * @type {Array<FolderCreateSignedUrlInputDTOInner>}
     * @memberof FoldersApiCreatePresignedUrls
     */
    readonly folderCreateSignedUrlInputDTOInner: Array<FolderCreateSignedUrlInputDTOInner>;
}
/**
 * Request parameters for deleteFolder operation in FoldersApi.
 * @export
 * @interface FoldersApiDeleteFolderRequest
 */
export interface FoldersApiDeleteFolderRequest {
    /**
     *
     * @type {string}
     * @memberof FoldersApiDeleteFolder
     */
    readonly folderId: string;
}
/**
 * Request parameters for deleteFolderObject operation in FoldersApi.
 * @export
 * @interface FoldersApiDeleteFolderObjectRequest
 */
export interface FoldersApiDeleteFolderObjectRequest {
    /**
     *
     * @type {string}
     * @memberof FoldersApiDeleteFolderObject
     */
    readonly folderId: string;
    /**
     *
     * @type {string}
     * @memberof FoldersApiDeleteFolderObject
     */
    readonly objectKey: string;
}
/**
 * Request parameters for getFolder operation in FoldersApi.
 * @export
 * @interface FoldersApiGetFolderRequest
 */
export interface FoldersApiGetFolderRequest {
    /**
     *
     * @type {string}
     * @memberof FoldersApiGetFolder
     */
    readonly folderId: string;
}
/**
 * Request parameters for getFolderMetadata operation in FoldersApi.
 * @export
 * @interface FoldersApiGetFolderMetadataRequest
 */
export interface FoldersApiGetFolderMetadataRequest {
    /**
     *
     * @type {string}
     * @memberof FoldersApiGetFolderMetadata
     */
    readonly folderId: string;
}
/**
 * Request parameters for getFolderObject operation in FoldersApi.
 * @export
 * @interface FoldersApiGetFolderObjectRequest
 */
export interface FoldersApiGetFolderObjectRequest {
    /**
     *
     * @type {string}
     * @memberof FoldersApiGetFolderObject
     */
    readonly folderId: string;
    /**
     *
     * @type {string}
     * @memberof FoldersApiGetFolderObject
     */
    readonly objectKey: string;
}
/**
 * Request parameters for handleFolderAction operation in FoldersApi.
 * @export
 * @interface FoldersApiHandleFolderActionRequest
 */
export interface FoldersApiHandleFolderActionRequest {
    /**
     *
     * @type {string}
     * @memberof FoldersApiHandleFolderAction
     */
    readonly folderId: string;
    /**
     *
     * @type {string}
     * @memberof FoldersApiHandleFolderAction
     */
    readonly appIdentifier: string;
    /**
     *
     * @type {string}
     * @memberof FoldersApiHandleFolderAction
     */
    readonly actionKey: string;
    /**
     *
     * @type {FolderHandleActionInputDTO}
     * @memberof FoldersApiHandleFolderAction
     */
    readonly folderHandleActionInputDTO: FolderHandleActionInputDTO;
}
/**
 * Request parameters for listFolderObjects operation in FoldersApi.
 * @export
 * @interface FoldersApiListFolderObjectsRequest
 */
export interface FoldersApiListFolderObjectsRequest {
    /**
     *
     * @type {string}
     * @memberof FoldersApiListFolderObjects
     */
    readonly folderId: string;
    /**
     *
     * @type {number}
     * @memberof FoldersApiListFolderObjects
     */
    readonly offset?: number;
    /**
     *
     * @type {number}
     * @memberof FoldersApiListFolderObjects
     */
    readonly limit?: number;
    /**
     *
     * @type {string}
     * @memberof FoldersApiListFolderObjects
     */
    readonly search?: string;
}
/**
 * Request parameters for listFolders operation in FoldersApi.
 * @export
 * @interface FoldersApiListFoldersRequest
 */
export interface FoldersApiListFoldersRequest {
    /**
     *
     * @type {number}
     * @memberof FoldersApiListFolders
     */
    readonly offset?: number;
    /**
     *
     * @type {number}
     * @memberof FoldersApiListFolders
     */
    readonly limit?: number;
}
/**
 * Request parameters for refreshFolderObjectS3Metadata operation in FoldersApi.
 * @export
 * @interface FoldersApiRefreshFolderObjectS3MetadataRequest
 */
export interface FoldersApiRefreshFolderObjectS3MetadataRequest {
    /**
     *
     * @type {string}
     * @memberof FoldersApiRefreshFolderObjectS3Metadata
     */
    readonly folderId: string;
    /**
     *
     * @type {string}
     * @memberof FoldersApiRefreshFolderObjectS3Metadata
     */
    readonly objectKey: string;
}
/**
 * Request parameters for rescanFolder operation in FoldersApi.
 * @export
 * @interface FoldersApiRescanFolderRequest
 */
export interface FoldersApiRescanFolderRequest {
    /**
     *
     * @type {string}
     * @memberof FoldersApiRescanFolder
     */
    readonly folderId: string;
}
/**
 * FoldersApi - object-oriented interface
 * @export
 * @class FoldersApi
 * @extends {BaseAPI}
 */
export declare class FoldersApi extends BaseAPI {
    /**
     *
     * @param {FoldersApiCreateFolderRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof FoldersApi
     */
    createFolder(requestParameters: FoldersApiCreateFolderRequest, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<FolderCreateResponse, any>>;
    /**
     *
     * @param {FoldersApiCreatePresignedUrlsRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof FoldersApi
     */
    createPresignedUrls(requestParameters: FoldersApiCreatePresignedUrlsRequest, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<FolderCreateSignedUrlsResponse, any>>;
    /**
     *
     * @param {FoldersApiDeleteFolderRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof FoldersApi
     */
    deleteFolder(requestParameters: FoldersApiDeleteFolderRequest, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<void, any>>;
    /**
     *
     * @param {FoldersApiDeleteFolderObjectRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof FoldersApi
     */
    deleteFolderObject(requestParameters: FoldersApiDeleteFolderObjectRequest, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<void, any>>;
    /**
     *
     * @param {FoldersApiGetFolderRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof FoldersApi
     */
    getFolder(requestParameters: FoldersApiGetFolderRequest, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<FolderGetResponse, any>>;
    /**
     *
     * @param {FoldersApiGetFolderMetadataRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof FoldersApi
     */
    getFolderMetadata(requestParameters: FoldersApiGetFolderMetadataRequest, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<FolderGetMetadataResponse, any>>;
    /**
     *
     * @param {FoldersApiGetFolderObjectRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof FoldersApi
     */
    getFolderObject(requestParameters: FoldersApiGetFolderObjectRequest, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<FolderObjectGetResponse, any>>;
    /**
     *
     * @param {FoldersApiHandleFolderActionRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof FoldersApi
     */
    handleFolderAction(requestParameters: FoldersApiHandleFolderActionRequest, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<void, any>>;
    /**
     *
     * @param {FoldersApiListFolderObjectsRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof FoldersApi
     */
    listFolderObjects(requestParameters: FoldersApiListFolderObjectsRequest, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<FolderObjectListResponse, any>>;
    /**
     *
     * @param {FoldersApiListFoldersRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof FoldersApi
     */
    listFolders(requestParameters?: FoldersApiListFoldersRequest, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<FolderListResponse, any>>;
    /**
     *
     * @param {FoldersApiRefreshFolderObjectS3MetadataRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof FoldersApi
     */
    refreshFolderObjectS3Metadata(requestParameters: FoldersApiRefreshFolderObjectS3MetadataRequest, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<FolderObjectGetResponse, any>>;
    /**
     *
     * @param {FoldersApiRescanFolderRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof FoldersApi
     */
    rescanFolder(requestParameters: FoldersApiRescanFolderRequest, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<void, any>>;
}
/**
 * ServerApi - axios parameter creator
 * @export
 */
export declare const ServerApiAxiosParamCreator: (configuration?: Configuration) => {
    /**
     *
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getServerSettings: (options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @param {string} settingKey
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    resetServerSetting: (settingKey: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @param {string} settingKey
     * @param {SetSettingInputDTO} setSettingInputDTO
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    setServerSetting: (settingKey: string, setSettingInputDTO: SetSettingInputDTO, options?: AxiosRequestConfig) => Promise<RequestArgs>;
};
/**
 * ServerApi - functional programming interface
 * @export
 */
export declare const ServerApiFp: (configuration?: Configuration) => {
    /**
     *
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getServerSettings(options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<SettingsGetResponse>>;
    /**
     *
     * @param {string} settingKey
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    resetServerSetting(settingKey: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<SettingSetResponse>>;
    /**
     *
     * @param {string} settingKey
     * @param {SetSettingInputDTO} setSettingInputDTO
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    setServerSetting(settingKey: string, setSettingInputDTO: SetSettingInputDTO, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<SettingSetResponse>>;
};
/**
 * ServerApi - factory interface
 * @export
 */
export declare const ServerApiFactory: (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) => {
    /**
     *
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getServerSettings(options?: AxiosRequestConfig): AxiosPromise<SettingsGetResponse>;
    /**
     *
     * @param {ServerApiResetServerSettingRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    resetServerSetting(requestParameters: ServerApiResetServerSettingRequest, options?: AxiosRequestConfig): AxiosPromise<SettingSetResponse>;
    /**
     *
     * @param {ServerApiSetServerSettingRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    setServerSetting(requestParameters: ServerApiSetServerSettingRequest, options?: AxiosRequestConfig): AxiosPromise<SettingSetResponse>;
};
/**
 * Request parameters for resetServerSetting operation in ServerApi.
 * @export
 * @interface ServerApiResetServerSettingRequest
 */
export interface ServerApiResetServerSettingRequest {
    /**
     *
     * @type {string}
     * @memberof ServerApiResetServerSetting
     */
    readonly settingKey: string;
}
/**
 * Request parameters for setServerSetting operation in ServerApi.
 * @export
 * @interface ServerApiSetServerSettingRequest
 */
export interface ServerApiSetServerSettingRequest {
    /**
     *
     * @type {string}
     * @memberof ServerApiSetServerSetting
     */
    readonly settingKey: string;
    /**
     *
     * @type {SetSettingInputDTO}
     * @memberof ServerApiSetServerSetting
     */
    readonly setSettingInputDTO: SetSettingInputDTO;
}
/**
 * ServerApi - object-oriented interface
 * @export
 * @class ServerApi
 * @extends {BaseAPI}
 */
export declare class ServerApi extends BaseAPI {
    /**
     *
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ServerApi
     */
    getServerSettings(options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<SettingsGetResponse, any>>;
    /**
     *
     * @param {ServerApiResetServerSettingRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ServerApi
     */
    resetServerSetting(requestParameters: ServerApiResetServerSettingRequest, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<SettingSetResponse, any>>;
    /**
     *
     * @param {ServerApiSetServerSettingRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ServerApi
     */
    setServerSetting(requestParameters: ServerApiSetServerSettingRequest, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<SettingSetResponse, any>>;
}
/**
 * StorageProvisionsApi - axios parameter creator
 * @export
 */
export declare const StorageProvisionsApiAxiosParamCreator: (configuration?: Configuration) => {
    /**
     *
     * @param {StorageProvisionInputDTO} storageProvisionInputDTO
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    createServerProvision: (storageProvisionInputDTO: StorageProvisionInputDTO, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @param {string} storageProvisionId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    deleteStorageProvision: (storageProvisionId: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @param {ListStorageProvisionsProvisionTypeEnum} [provisionType]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    listStorageProvisions: (provisionType?: ListStorageProvisionsProvisionTypeEnum, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @param {string} storageProvisionId
     * @param {StorageProvisionInputDTO} storageProvisionInputDTO
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    updateStorageProvision: (storageProvisionId: string, storageProvisionInputDTO: StorageProvisionInputDTO, options?: AxiosRequestConfig) => Promise<RequestArgs>;
};
/**
 * StorageProvisionsApi - functional programming interface
 * @export
 */
export declare const StorageProvisionsApiFp: (configuration?: Configuration) => {
    /**
     *
     * @param {StorageProvisionInputDTO} storageProvisionInputDTO
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    createServerProvision(storageProvisionInputDTO: StorageProvisionInputDTO, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<StorageProvisionListResponse>>;
    /**
     *
     * @param {string} storageProvisionId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    deleteStorageProvision(storageProvisionId: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<StorageProvisionListResponse>>;
    /**
     *
     * @param {ListStorageProvisionsProvisionTypeEnum} [provisionType]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    listStorageProvisions(provisionType?: ListStorageProvisionsProvisionTypeEnum, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<StorageProvisionListResponse>>;
    /**
     *
     * @param {string} storageProvisionId
     * @param {StorageProvisionInputDTO} storageProvisionInputDTO
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    updateStorageProvision(storageProvisionId: string, storageProvisionInputDTO: StorageProvisionInputDTO, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<StorageProvisionListResponse>>;
};
/**
 * StorageProvisionsApi - factory interface
 * @export
 */
export declare const StorageProvisionsApiFactory: (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) => {
    /**
     *
     * @param {StorageProvisionsApiCreateServerProvisionRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    createServerProvision(requestParameters: StorageProvisionsApiCreateServerProvisionRequest, options?: AxiosRequestConfig): AxiosPromise<StorageProvisionListResponse>;
    /**
     *
     * @param {StorageProvisionsApiDeleteStorageProvisionRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    deleteStorageProvision(requestParameters: StorageProvisionsApiDeleteStorageProvisionRequest, options?: AxiosRequestConfig): AxiosPromise<StorageProvisionListResponse>;
    /**
     *
     * @param {StorageProvisionsApiListStorageProvisionsRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    listStorageProvisions(requestParameters?: StorageProvisionsApiListStorageProvisionsRequest, options?: AxiosRequestConfig): AxiosPromise<StorageProvisionListResponse>;
    /**
     *
     * @param {StorageProvisionsApiUpdateStorageProvisionRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    updateStorageProvision(requestParameters: StorageProvisionsApiUpdateStorageProvisionRequest, options?: AxiosRequestConfig): AxiosPromise<StorageProvisionListResponse>;
};
/**
 * Request parameters for createServerProvision operation in StorageProvisionsApi.
 * @export
 * @interface StorageProvisionsApiCreateServerProvisionRequest
 */
export interface StorageProvisionsApiCreateServerProvisionRequest {
    /**
     *
     * @type {StorageProvisionInputDTO}
     * @memberof StorageProvisionsApiCreateServerProvision
     */
    readonly storageProvisionInputDTO: StorageProvisionInputDTO;
}
/**
 * Request parameters for deleteStorageProvision operation in StorageProvisionsApi.
 * @export
 * @interface StorageProvisionsApiDeleteStorageProvisionRequest
 */
export interface StorageProvisionsApiDeleteStorageProvisionRequest {
    /**
     *
     * @type {string}
     * @memberof StorageProvisionsApiDeleteStorageProvision
     */
    readonly storageProvisionId: string;
}
/**
 * Request parameters for listStorageProvisions operation in StorageProvisionsApi.
 * @export
 * @interface StorageProvisionsApiListStorageProvisionsRequest
 */
export interface StorageProvisionsApiListStorageProvisionsRequest {
    /**
     *
     * @type {'CONTENT' | 'METADATA' | 'BACKUP'}
     * @memberof StorageProvisionsApiListStorageProvisions
     */
    readonly provisionType?: ListStorageProvisionsProvisionTypeEnum;
}
/**
 * Request parameters for updateStorageProvision operation in StorageProvisionsApi.
 * @export
 * @interface StorageProvisionsApiUpdateStorageProvisionRequest
 */
export interface StorageProvisionsApiUpdateStorageProvisionRequest {
    /**
     *
     * @type {string}
     * @memberof StorageProvisionsApiUpdateStorageProvision
     */
    readonly storageProvisionId: string;
    /**
     *
     * @type {StorageProvisionInputDTO}
     * @memberof StorageProvisionsApiUpdateStorageProvision
     */
    readonly storageProvisionInputDTO: StorageProvisionInputDTO;
}
/**
 * StorageProvisionsApi - object-oriented interface
 * @export
 * @class StorageProvisionsApi
 * @extends {BaseAPI}
 */
export declare class StorageProvisionsApi extends BaseAPI {
    /**
     *
     * @param {StorageProvisionsApiCreateServerProvisionRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof StorageProvisionsApi
     */
    createServerProvision(requestParameters: StorageProvisionsApiCreateServerProvisionRequest, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<StorageProvisionListResponse, any>>;
    /**
     *
     * @param {StorageProvisionsApiDeleteStorageProvisionRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof StorageProvisionsApi
     */
    deleteStorageProvision(requestParameters: StorageProvisionsApiDeleteStorageProvisionRequest, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<StorageProvisionListResponse, any>>;
    /**
     *
     * @param {StorageProvisionsApiListStorageProvisionsRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof StorageProvisionsApi
     */
    listStorageProvisions(requestParameters?: StorageProvisionsApiListStorageProvisionsRequest, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<StorageProvisionListResponse, any>>;
    /**
     *
     * @param {StorageProvisionsApiUpdateStorageProvisionRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof StorageProvisionsApi
     */
    updateStorageProvision(requestParameters: StorageProvisionsApiUpdateStorageProvisionRequest, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<StorageProvisionListResponse, any>>;
}
/**
 * @export
 */
export declare const ListStorageProvisionsProvisionTypeEnum: {
    readonly Content: "CONTENT";
    readonly Metadata: "METADATA";
    readonly Backup: "BACKUP";
};
export type ListStorageProvisionsProvisionTypeEnum = typeof ListStorageProvisionsProvisionTypeEnum[keyof typeof ListStorageProvisionsProvisionTypeEnum];
/**
 * UsersApi - axios parameter creator
 * @export
 */
export declare const UsersApiAxiosParamCreator: (configuration?: Configuration) => {
    /**
     *
     * @param {UserCreateInputDTO} userCreateInputDTO
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    createUser: (userCreateInputDTO: UserCreateInputDTO, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @param {string} userId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    deleteUser: (userId: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @param {string} userId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getUser: (userId: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @param {number} [offset]
     * @param {number} [limit]
     * @param {boolean} [isAdmin]
     * @param {ListUsersSortEnum} [sort]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    listUsers: (offset?: number, limit?: number, isAdmin?: boolean, sort?: ListUsersSortEnum, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @param {string} userId
     * @param {UserUpdateInputDTO} userUpdateInputDTO
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    updateUser: (userId: string, userUpdateInputDTO: UserUpdateInputDTO, options?: AxiosRequestConfig) => Promise<RequestArgs>;
};
/**
 * UsersApi - functional programming interface
 * @export
 */
export declare const UsersApiFp: (configuration?: Configuration) => {
    /**
     *
     * @param {UserCreateInputDTO} userCreateInputDTO
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    createUser(userCreateInputDTO: UserCreateInputDTO, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<UserGetResponse>>;
    /**
     *
     * @param {string} userId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    deleteUser(userId: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<void>>;
    /**
     *
     * @param {string} userId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getUser(userId: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<UserGetResponse>>;
    /**
     *
     * @param {number} [offset]
     * @param {number} [limit]
     * @param {boolean} [isAdmin]
     * @param {ListUsersSortEnum} [sort]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    listUsers(offset?: number, limit?: number, isAdmin?: boolean, sort?: ListUsersSortEnum, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<UserListResponse>>;
    /**
     *
     * @param {string} userId
     * @param {UserUpdateInputDTO} userUpdateInputDTO
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    updateUser(userId: string, userUpdateInputDTO: UserUpdateInputDTO, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<UserGetResponse>>;
};
/**
 * UsersApi - factory interface
 * @export
 */
export declare const UsersApiFactory: (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) => {
    /**
     *
     * @param {UsersApiCreateUserRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    createUser(requestParameters: UsersApiCreateUserRequest, options?: AxiosRequestConfig): AxiosPromise<UserGetResponse>;
    /**
     *
     * @param {UsersApiDeleteUserRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    deleteUser(requestParameters: UsersApiDeleteUserRequest, options?: AxiosRequestConfig): AxiosPromise<void>;
    /**
     *
     * @param {UsersApiGetUserRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getUser(requestParameters: UsersApiGetUserRequest, options?: AxiosRequestConfig): AxiosPromise<UserGetResponse>;
    /**
     *
     * @param {UsersApiListUsersRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    listUsers(requestParameters?: UsersApiListUsersRequest, options?: AxiosRequestConfig): AxiosPromise<UserListResponse>;
    /**
     *
     * @param {UsersApiUpdateUserRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    updateUser(requestParameters: UsersApiUpdateUserRequest, options?: AxiosRequestConfig): AxiosPromise<UserGetResponse>;
};
/**
 * Request parameters for createUser operation in UsersApi.
 * @export
 * @interface UsersApiCreateUserRequest
 */
export interface UsersApiCreateUserRequest {
    /**
     *
     * @type {UserCreateInputDTO}
     * @memberof UsersApiCreateUser
     */
    readonly userCreateInputDTO: UserCreateInputDTO;
}
/**
 * Request parameters for deleteUser operation in UsersApi.
 * @export
 * @interface UsersApiDeleteUserRequest
 */
export interface UsersApiDeleteUserRequest {
    /**
     *
     * @type {string}
     * @memberof UsersApiDeleteUser
     */
    readonly userId: string;
}
/**
 * Request parameters for getUser operation in UsersApi.
 * @export
 * @interface UsersApiGetUserRequest
 */
export interface UsersApiGetUserRequest {
    /**
     *
     * @type {string}
     * @memberof UsersApiGetUser
     */
    readonly userId: string;
}
/**
 * Request parameters for listUsers operation in UsersApi.
 * @export
 * @interface UsersApiListUsersRequest
 */
export interface UsersApiListUsersRequest {
    /**
     *
     * @type {number}
     * @memberof UsersApiListUsers
     */
    readonly offset?: number;
    /**
     *
     * @type {number}
     * @memberof UsersApiListUsers
     */
    readonly limit?: number;
    /**
     *
     * @type {boolean}
     * @memberof UsersApiListUsers
     */
    readonly isAdmin?: boolean;
    /**
     *
     * @type {'createdAt-asc' | 'createdAt-desc' | 'email-asc' | 'email-desc' | 'name-asc' | 'name-desc' | 'role-asc' | 'role-desc' | 'status-asc' | 'status-desc' | 'updatedAt-asc' | 'updatedAt-desc'}
     * @memberof UsersApiListUsers
     */
    readonly sort?: ListUsersSortEnum;
}
/**
 * Request parameters for updateUser operation in UsersApi.
 * @export
 * @interface UsersApiUpdateUserRequest
 */
export interface UsersApiUpdateUserRequest {
    /**
     *
     * @type {string}
     * @memberof UsersApiUpdateUser
     */
    readonly userId: string;
    /**
     *
     * @type {UserUpdateInputDTO}
     * @memberof UsersApiUpdateUser
     */
    readonly userUpdateInputDTO: UserUpdateInputDTO;
}
/**
 * UsersApi - object-oriented interface
 * @export
 * @class UsersApi
 * @extends {BaseAPI}
 */
export declare class UsersApi extends BaseAPI {
    /**
     *
     * @param {UsersApiCreateUserRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof UsersApi
     */
    createUser(requestParameters: UsersApiCreateUserRequest, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<UserGetResponse, any>>;
    /**
     *
     * @param {UsersApiDeleteUserRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof UsersApi
     */
    deleteUser(requestParameters: UsersApiDeleteUserRequest, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<void, any>>;
    /**
     *
     * @param {UsersApiGetUserRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof UsersApi
     */
    getUser(requestParameters: UsersApiGetUserRequest, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<UserGetResponse, any>>;
    /**
     *
     * @param {UsersApiListUsersRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof UsersApi
     */
    listUsers(requestParameters?: UsersApiListUsersRequest, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<UserListResponse, any>>;
    /**
     *
     * @param {UsersApiUpdateUserRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof UsersApi
     */
    updateUser(requestParameters: UsersApiUpdateUserRequest, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<UserGetResponse, any>>;
}
/**
 * @export
 */
export declare const ListUsersSortEnum: {
    readonly CreatedAtAsc: "createdAt-asc";
    readonly CreatedAtDesc: "createdAt-desc";
    readonly EmailAsc: "email-asc";
    readonly EmailDesc: "email-desc";
    readonly NameAsc: "name-asc";
    readonly NameDesc: "name-desc";
    readonly RoleAsc: "role-asc";
    readonly RoleDesc: "role-desc";
    readonly StatusAsc: "status-asc";
    readonly StatusDesc: "status-desc";
    readonly UpdatedAtAsc: "updatedAt-asc";
    readonly UpdatedAtDesc: "updatedAt-desc";
};
export type ListUsersSortEnum = typeof ListUsersSortEnum[keyof typeof ListUsersSortEnum];
/**
 * ViewerApi - axios parameter creator
 * @export
 */
export declare const ViewerApiAxiosParamCreator: (configuration?: Configuration) => {
    /**
     *
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getViewer: (options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @param {UpdateViewerInputDTO} updateViewerInputDTO
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    updateViewer: (updateViewerInputDTO: UpdateViewerInputDTO, options?: AxiosRequestConfig) => Promise<RequestArgs>;
};
/**
 * ViewerApi - functional programming interface
 * @export
 */
export declare const ViewerApiFp: (configuration?: Configuration) => {
    /**
     *
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getViewer(options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<ViewerGetResponse>>;
    /**
     *
     * @param {UpdateViewerInputDTO} updateViewerInputDTO
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    updateViewer(updateViewerInputDTO: UpdateViewerInputDTO, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<ViewerGetResponse>>;
};
/**
 * ViewerApi - factory interface
 * @export
 */
export declare const ViewerApiFactory: (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) => {
    /**
     *
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getViewer(options?: AxiosRequestConfig): AxiosPromise<ViewerGetResponse>;
    /**
     *
     * @param {ViewerApiUpdateViewerRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    updateViewer(requestParameters: ViewerApiUpdateViewerRequest, options?: AxiosRequestConfig): AxiosPromise<ViewerGetResponse>;
};
/**
 * Request parameters for updateViewer operation in ViewerApi.
 * @export
 * @interface ViewerApiUpdateViewerRequest
 */
export interface ViewerApiUpdateViewerRequest {
    /**
     *
     * @type {UpdateViewerInputDTO}
     * @memberof ViewerApiUpdateViewer
     */
    readonly updateViewerInputDTO: UpdateViewerInputDTO;
}
/**
 * ViewerApi - object-oriented interface
 * @export
 * @class ViewerApi
 * @extends {BaseAPI}
 */
export declare class ViewerApi extends BaseAPI {
    /**
     *
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ViewerApi
     */
    getViewer(options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<ViewerGetResponse, any>>;
    /**
     *
     * @param {ViewerApiUpdateViewerRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ViewerApi
     */
    updateViewer(requestParameters: ViewerApiUpdateViewerRequest, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<ViewerGetResponse, any>>;
}
